import { TestBed } from '@angular/core/testing';
import { FormBuilder, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';
import * as moment from 'moment';
import { MatDatepicker } from '@angular/material/datepicker';
import { YourComponent } from './your.component'; // Replace with your component path
import { Moment } from 'moment';

describe('YourComponent', () => {
  let component: YourComponent;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [ReactiveFormsModule],
      providers: [FormBuilder]
    });

    const formBuilder = TestBed.inject(FormBuilder);
    component = new YourComponent(formBuilder);

    // Set up form group with startDate and endDate
    component.form = formBuilder.group({
      startDate: new FormControl(),
      endDate: new FormControl()
    });
  });

  it('should set month and year for endDate', () => {
    // Arrange
    const normalizedMonthAndYear = moment('2024-05', 'YYYY-MM'); // Set May 2024 for example
    const datepicker: MatDatepicker<Moment> = jasmine.createSpyObj('MatDatepicker', ['close']);

    // Act
    component.setMonthAndYearEndDate(normalizedMonthAndYear, datepicker);

    // Assert
    const endDateValue = component.form.controls['endDate'].value;
    expect(endDateValue.month()).toBe(4); // May is month 4 (0-indexed)
    expect(endDateValue.year()).toBe(2024);
    expect(datepicker.close).toHaveBeenCalled();
  });

  it('should set month and year for startDate', () => {
    // Arrange
    const normalizedMonthAndYear = moment('2023-10', 'YYYY-MM'); // Set October 2023 for example
    const datepicker: MatDatepicker<Moment> = jasmine.createSpyObj('MatDatepicker', ['close']);

    // Act
    component.setMonthAndYearStartDate(normalizedMonthAndYear, datepicker);

    // Assert
    const startDateValue = component.form.controls['startDate'].value;
    expect(startDateValue.month()).toBe(9); // October is month 9 (0-indexed)
    expect(startDateValue.year()).toBe(2023);
    expect(datepicker.close).toHaveBeenCalled();
  });
});
