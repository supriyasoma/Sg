exportDataAsCsv: jasmine.createSpy('exportDataAsCsv').and.callFake((params: CsvExportParams) => {
        // Simulate calling processHeaderCallback
        const mockHeaderParamsCheckResult = { column: { getColId: () => 'checkResult' }, value: { isValid: true, message: 'Error: Test error message' } };
        const headerResultCheckResult = params.processHeaderCallback(mockHeaderParamsCheckResult);
        expect(headerResultCheckResult).toBe('ok');

        const mockHeaderParamsInvalid = { column: { getColId: () => 'checkResult' }, value: { isValid: false, message: 'Error: Test error message' } };
        const headerResultInvalid = params.processHeaderCallback(mockHeaderParamsInvalid);
        expect(headerResultInvalid).toBe('Test error message'.replace(/[\r\n]/g, "").substr('Test error message'.indexOf(":") + 1));

        const mockHeaderParamsOther = { column: { getColId: () => 'otherColumn' }, value: 'Some value' };
        const headerResultOther = params.processHeaderCallback(mockHeaderParamsOther);
        expect(headerResultOther).toBe('OtherColumn');

        // Simulate calling processCellCallback
        const mockCellParams = { value: 'Cell value' };
        const cellResult = params.processCellCallback(mockCellParams);
        expect(cellResult).toBe('Cell value');
      })
