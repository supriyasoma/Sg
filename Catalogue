    it('should call the correct API endpoint with the correct headers and parameters', () => {
      const mockResponse = 'audit trail data';
      const referentialId = '12345';

      service.getAuditTrail(referentialId).subscribe(response => {
        expect(response.body).toEqual(mockResponse);
      });

      const req = httpMock.expectOne(req => req.url === `${environment.serviceBaseUrl}${service.auditTrail}`);
      expect(req.request.method).toBe('GET');
      expect(req.request.headers.get('Accept')).toBe('application/json; charset=utf-8');
      expect(req.request.params.get('referentialId')).toBe(referentialId);

      req.flush(mockResponse);
    });
