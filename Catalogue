 it('should call addRowDataset and return mock data', fakeAsync(() => {
    const isEdit = true;
    const isEditClick = true;
    const mockAddRowData = { success: true, data: 'row added' };
    datasetComponentSpy.addRowDataset.and.returnValue(mockAddRowData);

    component.editDataset(isEdit, isEditClick);

    tick(500); // Advance the timer to trigger setTimeout calls

    expect(datasetComponentSpy.addRowDataset).toHaveBeenCalled();
    expect(datasetComponentSpy.addRowDataset.calls.mostRecent().returnValue).toEqual(mockAddRowData);
    expect(component.editButtonLabel).toEqual('Edit BUTTON LABEL.edit');
    expect(component.isEdited).toBeTrue();
    expect(component.detailsValid).toBeFalse();
    expect(component.isLoaded).toBeTrue();
  }));

  it('should call editDataset and return mock data', fakeAsync(() => {
    const isEdit = true;
    const isEditClick = true;
    const mockEditData = { success: true, data: 'dataset edited' };
    datasetComponentSpy.editDataset.and.returnValue(mockEditData);

    component.editDataset(isEdit, isEditClick);

    tick(500); // Advance the timer to trigger setTimeout calls

    expect(datasetComponentSpy.editDataset).toHaveBeenCalledWith(isEdit);
    expect(datasetComponentSpy.editDataset.calls.mostRecent().returnValue).toEqual(mockEditData);
  }));
