import { TestBed } from '@angular/core/testing';
import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { UploadService } from './upload.service'; // Adjust the path as needed
import { environment } from '../../../environments/environment';
import { HttpResponse } from '@angular/common/http';
import { ApiCheckResponse } from 'src/app/models/api-check-response';

describe('UploadService', () => {
  let service: UploadService;
  let httpMock: HttpTestingController;

  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule],
      providers: [UploadService]
    });

    service = TestBed.inject(UploadService);
    httpMock = TestBed.inject(HttpTestingController);
  });

  afterEach(() => {
    httpMock.verify(); // Ensure no outstanding requests
  });

  it('should send dataset file for verification', () => {
    const dummyResponse: ApiCheckResponse = { /* mock response data */ };
    const referentialId = '123';
    const referentialFile = new File(['content'], 'testfile.txt');

    service.sendDatasetFileForVerification(referentialId, referentialFile).subscribe(response => {
      expect(response.body).toEqual(dummyResponse);
    });

    const req = httpMock.expectOne(
      `${environment.serviceBaseUrl}/api/v1/referentials/checks/${referentialId}`
    );

    expect(req.request.method).toBe('POST');
    expect(req.request.headers.get('Accept')).toContain('application/json');
    expect(req.request.body instanceof FormData).toBeTrue();

    req.flush(dummyResponse, { status: 200, statusText: 'OK' });
  });
});
